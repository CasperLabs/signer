---
platform:
  os: linux
  arch: amd64

# Begin
clone:
  git-clone:
    commands: |
      set -ex
      git clone -b ${DRONE_TAG:-$DRONE_BRANCH} $DRONE_REMOTE_URL .
      if [ x$DRONE_PULL_REQUEST != x ]; then
          git fetch origin refs/pull/$DRONE_PULL_REQUEST/head
          EMAIL=ci git merge --no-edit FETCH_HEAD
      fi
      git rev-parse HEAD
    image: "casperlabs/buildenv:latest"

kind: pipeline
name: build-test-publish-op-1357

steps:
- name: install-dependencies
  commands:
  - npm install
  image: "casperlabs/buildenv:latest"

- name: run-build
  commands:
  - npm run build
  image: "casperlabs/buildenv:latest"
  depends_on:
  - install-dependencies

- name: run-test
  commands:
  - npm run test_ci
  image: "casperlabs/buildenv:latest"
  depends_on:
  - run-build

- name: upload-extension
  image: "casperlabs/buildenv:latest"
  script: |
          ls -alR /drone
          ZIP_FILE=$(ls /drone/artifacts/*zip)
          ACCESS_TOKEN=$(curl "https://accounts.google.com/o/oauth2/token" -d "client_id=${CLIENT_ID}&client_secret=${CLIENT_SECRET}&refresh_token=${REFRESH_TOKEN}&grant_type=refresh_token&redirect_uri=urn:ietf:wg:oauth:2.0:oob" | jq -r .access_token)
          curl -H "Authorization: Bearer ${ACCESS_TOKEN}" -H "x-goog-api-version: 2" -X PUT -T $ZIP_FILE -v "https://www.googleapis.com/upload/chromewebstore/v1.1/items/${APPLICATION_ID}"
  environment:
    APPLICATION_ID:
      from_secret: plugin_application
    CLIENT_ID:
      from_secret: plugin_client_id
    CLIENT_SECRET:
      from_secret: plugin_client_secret
    REFRESH_TOKEN:
      from_secret: plugin_refresh_token
  depends_on:
  - run-build

trigger:
  branch:
    - OP-1357
  event:
    - push
---
kind: pipeline
name: build-test-publish

steps:
- name: install-dependencies
  commands:
  - npm install
  image: "casperlabs/buildenv:latest"

- name: run-build
  commands:
  - npm run build
  image: "casperlabs/buildenv:latest"
  depends_on:
  - install-dependencies

- name: run-test
  commands:
  - npm run test_ci
  image: "casperlabs/buildenv:latest"
  depends_on:
  - run-build

- name: upload-extension
  image: "casperlabs/buildenv:latest"
  script: |
          ls -alR /drone
          ZIP_FILE=$(ls /drone/artifacts/*zip)
          ACCESS_TOKEN=$(curl "https://accounts.google.com/o/oauth2/token" -d "client_id=${CLIENT_ID}&client_secret=${CLIENT_SECRET}&refresh_token=${REFRESH_TOKEN}&grant_type=refresh_token&redirect_uri=urn:ietf:wg:oauth:2.0:oob" | jq -r .access_token)
          curl -H "Authorization: Bearer ${ACCESS_TOKEN}" -H "x-goog-api-version: 2" -X PUT -T $ZIP_FILE -v "https://www.googleapis.com/upload/chromewebstore/v1.1/items/${APPLICATION_ID}"
  environment:
    APPLICATION_ID:
      from_secret: plugin_application
    CLIENT_ID:
      from_secret: plugin_client_id
    CLIENT_SECRET:
      from_secret: plugin_client_secret
    REFRESH_TOKEN:
      from_secret: plugin_refresh_token
  depends_on:
  - run-build

trigger:
  branch:
  - master
  - trying
  - staging

---
kind: pipeline
name: failed-build-alert

clone:
  disable: true

steps:
- name: notify
  image: plugins/slack
  settings:
    webhook:
      from_secret: slack_webhook
    template:
    - |
      signer-repo build status: *{{ uppercasefirst build.status }}*
      Author: {{ build.author }}
      Drone Build: <{{ build.link }}|#{{ build.number }}>
      Commit Link: <https://github.com/{{repo.owner}}/{{repo.name}}/commit/{{build.commit}}|{{ truncate build.commit 10 }}>
trigger:
  status:
  - failure
  branch:
  - master
  - trying
  - staging

depends_on:
- build-test-publish
